#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.6 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 32 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 55 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Inconsolata\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1           0 2760 0 17 3 17 #"#!/usr/bin/racket"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 24 #"test-engine/racket-tests"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 10 #"htdp/image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 19 3 18 #"\"world-cs1102.rkt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #"; ======================="
0 0 24 29 1 #"\n"
0 0 17 3 25 #"; || Christopher Myers ||"
0 0 24 29 1 #"\n"
0 0 17 3 25 #"; ======================="
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #"; ====================="
0 0 24 29 1 #"\n"
0 0 17 3 23 #"; || LANGUAGE DESIGN ||"
0 0 24 29 1 #"\n"
0 0 17 3 23 #"; ====================="
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; A cmd is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";  -(make-JMPOBJ symbol number number)"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 0 17 3 20 #"-Jump gobject to x,y"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";  -(make-JMPOBJRAND symbol)"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 0 17 3 30 #"-Jump gobject to random coords"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";  -(make-STOPOBJ symbol)"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 0 17 3 27 #"-Stop gobject from movement"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";  -(make-ADDOBJ symbol)"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 0 17 3 12 #"-Add gobject"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";  -(make-UDTOBJ symbol)"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 0 17 3 15 #"-Update gobject"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";  -(make-DELOBJ symbol)"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 0 17 3 15 #"-Delete gobject"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";  -(make-WHILE condcmd list[cmd])"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 0 17 3 26 #"-Do while cmd returns true"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";  -(make-IFCOND condcmd list[cmd] list[cmd])"
0 1 17 65 1 #"\t"
0 0 17 3 73
(
 #"-If cmd returns true, execute first cmdlist, otherwise the second cm"
 #"dlist"
) 0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 21 #"; A condcmd is one of"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";  -(make-COLLIDE? symbol symbol)"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";  -(make-EDGECOLLIDE? symbol)"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";  -(make-NOTCOND condcmd)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 22 #"; An gobject is one of"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";  -(make-gobject symbol graphic number number number number)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 21 #"; A graphic is one of"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";  -(make-GENCIRCLE number symbol)"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";  -(make-GENRECT number number symbol)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 49 #"; A JMPOBJ is (make-JMPOBJ gobject number number)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 6 #"JMPOBJ"
0 0 24 3 2 #" ("
0 0 14 3 3 #"obj"
0 0 24 3 1 #" "
0 0 14 3 2 #"nx"
0 0 24 3 1 #" "
0 0 14 3 2 #"ny"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #"; A JMPOBJ is (make-JMPOBJRAND gobject)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 10 #"JMPOBJRAND"
0 0 24 3 2 #" ("
0 0 14 3 3 #"obj"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #"; A STOPOBJ is (make-STOPOBJ gobject)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 7 #"STOPOBJ"
0 0 24 3 2 #" ("
0 0 14 3 3 #"obj"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #"; A ADDOBJ is (make-ADDOBJ gobject)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 6 #"ADDOBJ"
0 0 24 3 2 #" ("
0 0 14 3 3 #"obj"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #"; A UDTOBJ is (make-UDTOBJ gobject)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 6 #"UDTOBJ"
0 0 24 3 2 #" ("
0 0 14 3 3 #"obj"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #"; A DELOBJ is (make-DELOBJ gobject)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 6 #"DELOBJ"
0 0 24 3 2 #" ("
0 0 14 3 3 #"obj"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 47 #"; A COLLIDE? is (make-COLLIDE? gobject gobject)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 8 #"COLLIDE?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"obj1"
0 0 24 3 1 #" "
0 0 14 3 4 #"obj2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 47 #"; A EDGECOLLIDE? is (make-EDGECOLLIDE? gobject)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 12 #"EDGECOLLIDE?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"obj"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #"; A WHILE is (make-WHILE cmd list[cmd])"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 5 #"WHILE"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cnd"
0 0 24 3 1 #" "
0 0 14 3 4 #"cmds"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 51 #"; A IFCOND is (make-IFCOND cmd list[cmd] list[cmd])"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 6 #"IFCOND"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cnd"
0 0 24 3 1 #" "
0 0 14 3 5 #"ctrue"
0 0 24 3 1 #" "
0 0 14 3 6 #"cfalse"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #"; A NOT is (make-NOTCOND cmd)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 7 #"NOTCOND"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cnd"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 47 #"; A GENCIRCLE is (make-GENCIRCLE number symbol)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 9 #"GENCIRCLE"
0 0 24 3 2 #" ("
0 0 14 3 3 #"rad"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 50 #"; A GENRECT is (make-GENRECT number number symbol)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 7 #"GENRECT"
0 0 24 3 2 #" ("
0 0 14 3 1 #"h"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #"; An gobject is (make-gobject symbol graphic number number number nu"
 #"mber)"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 7 #"gobject"
0 0 24 3 2 #" ("
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 6 #"sprite"
0 0 24 3 1 #" "
0 0 14 3 4 #"posx"
0 0 24 3 1 #" "
0 0 14 3 4 #"posy"
0 0 24 3 1 #" "
0 0 14 3 4 #"velx"
0 0 24 3 1 #" "
0 0 14 3 4 #"vely"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 26 #"; ========================"
0 0 24 29 1 #"\n"
0 0 17 3 26 #"; || EXAMPLE ANIMATIONS ||"
0 0 24 29 1 #"\n"
0 0 17 3 26 #"; ========================"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16 #"#| Animation 1: "
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 74
(
 #"\"A red ball moving at a angle towards a blue wall until it hits the"
 #" wall. "
) 0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 76
(
 #"At that point, the wall disappears and the ball moves back towards t"
 #"he left "
) 0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 24 #"edge of the canvas, stop"
0 0 17 3 47 #"ping when it hits the left edge of the canvas.\""
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"anim-sample1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 8 #"       ("
0 0 14 3 11 #"make-ADDOBJ"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-gobject"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"rcirc"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-GENCIRCLE"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"red"
0 0 24 3 2 #") "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 8 #"       ("
0 0 14 3 11 #"make-ADDOBJ"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-gobject"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"bwall"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-GENRECT"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 24 3 2 #") "
0 0 21 3 3 #"600"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 8 #"       ("
0 0 14 3 10 #"make-WHILE"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-NOTCOND"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-COLLIDE?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"rcirc"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"bwall"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 4 #"   ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-UDTOBJ"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"rcirc"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 8 #"       ("
0 0 14 3 11 #"make-DELOBJ"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"bwall"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 8 #"       ("
0 0 14 3 11 #"make-DELOBJ"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"rcirc"
0 0 24 3 2 #") "
0 0 17 3 94
(
 #";; Needs to be recreated. I assume that the animator would know the "
 #"location of the collision?"
) 0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 8 #"       ("
0 0 14 3 11 #"make-ADDOBJ"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-gobject"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"rcirc"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-GENCIRCLE"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"red"
0 0 24 3 2 #") "
0 0 21 3 3 #"600"
0 0 24 3 1 #" "
0 0 21 3 3 #"340"
0 0 24 3 1 #" "
0 0 21 3 2 #"-5"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 8 #"       ("
0 0 14 3 10 #"make-WHILE"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-NOTCOND"
0 0 24 3 2 #" ("
0 0 14 3 17 #"make-EDGECOLLIDE?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"rcirc"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 4 #"   ("
0 0 14 3 11 #"make-UDTOBJ"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"rcirc"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 8 #"       ("
0 0 14 3 12 #"make-STOPOBJ"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"rcirc"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #"#| Animation 2:"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 39 #"\"A purple circle jumping to random loca"
0 0 17 3 38 #"tions around the canvas until it hits "
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 28 #"the top edge of the canvas.\""
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"anim-sample2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 8 #"       ("
0 0 14 3 11 #"make-ADDOBJ"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-gobject"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"pcirc"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-GENCIRCLE"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 24 3 2 #") "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 8 #"       ("
0 0 14 3 10 #"make-WHILE"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-NOTCOND"
0 0 24 3 2 #" ("
0 0 14 3 17 #"make-EDGECOLLIDE?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"pcirc"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 7 #"      ("
0 0 14 3 15 #"make-JMPOBJRAND"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"pcirc"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 8 #"       ("
0 0 14 3 12 #"make-STOPOBJ"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"pcirc"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #"#| Animation 3:"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 75
(
 #"\"An orange circle dropping straight down until it hits the green re"
 #"ctangle."
) 0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 73
(
 #"At that point, the red rectangle appears and the circle moves right "
 #"until"
) 0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 12 #"it hits the "
0 0 17 3 62
#"red rectangle, after which the orange circle jumps to a random"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 20 #"location and stops.\""
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"anim-sample3"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 8 #"       ("
0 0 14 3 11 #"make-ADDOBJ"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-gobject"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"ocirc"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-GENCIRCLE"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 24 3 2 #") "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 8 #"       ("
0 0 14 3 11 #"make-ADDOBJ"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-gobject"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"grect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-GENRECT"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 3 #"750"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"green"
0 0 24 3 2 #") "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 21 3 3 #"540"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 8 #"       ("
0 0 14 3 10 #"make-WHILE"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-NOTCOND"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-COLLIDE?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"ocirc"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"grect"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 4 #"   ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-UDTOBJ"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"ocirc"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 8 #"       ("
0 0 14 3 11 #"make-ADDOBJ"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-gobject"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"rrect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-GENRECT"
0 0 24 3 1 #" "
0 0 21 3 3 #"540"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"red"
0 0 24 3 2 #") "
0 0 21 3 3 #"750"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 8 #"       ("
0 0 14 3 11 #"make-DELOBJ"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"ocirc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 8 #"       ("
0 0 14 3 11 #"make-ADDOBJ"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-gobject"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"ocirc"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-GENCIRCLE"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 24 3 2 #") "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"740"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 8 #"       ("
0 0 14 3 10 #"make-WHILE"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-NOTCOND"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-COLLIDE?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"ocirc"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"rrect"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 4 #"   ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-UDTOBJ"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"ocirc"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 8 #"       ("
0 0 14 3 12 #"make-STOPOBJ"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"ocirc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 8 #"       ("
0 0 14 3 15 #"make-JMPOBJRAND"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"ocirc"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"#| Animation "
0 0 17 3 10 #"4 (custom)"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 45 #"\"A black ball bounces endlessly up and down.\""
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"anim-sample4"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 8 #"       ("
0 0 14 3 10 #"make-WHILE"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"make-ADDOBJ"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-gobject"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"bcirc"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-GENCIRCLE"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"black"
0 0 24 3 2 #") "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-WHILE"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-NOTCOND"
0 0 24 3 2 #" ("
0 0 14 3 17 #"make-EDGECOLLIDE?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"bcirc"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"make-UDTOBJ"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"bcirc"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"make-DELOBJ"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"bcirc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"make-ADDOBJ"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-gobject"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"bcirc"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-GENCIRCLE"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"black"
0 0 24 3 2 #") "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 3 #"599"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"-5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-WHILE"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-NOTCOND"
0 0 24 3 2 #" ("
0 0 14 3 17 #"make-EDGECOLLIDE?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"bcirc"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"make-UDTOBJ"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"bcirc"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"make-DELOBJ"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"bcirc"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #"; ================="
0 0 24 29 1 #"\n"
0 0 17 3 19 #"; || INTERPRETER ||"
0 0 24 29 1 #"\n"
0 0 17 3 19 #"; ================="
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #"; ============================="
0 0 24 29 1 #"\n"
0 0 17 3 23 #"; CORE MEMORY FUNCTIONS"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";; list[gobject]"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"core"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; in-core?: symbol -> boolean"
0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";; Consumes a symbol and returns true if that an gobject by that nam"
 #"es exists"
) 0 0 24 29 1 #"\n"
0 0 17 3 18 #";; in core memory."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"in-core?"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"obj-in-list?"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 4 #"core"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; obj-in-list? symbol list[obj] -> boolean"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";; Consumes a symbol and a list of gobjects and retrusn true"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; if that gobject is present in the given list."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"obj-in-list?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"DNE"
0 0 24 3 1 #" "
0 0 14 3 4 #"core"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 17 3 48 #";; Works because core is defined as empty above."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"obj-in-list?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"DE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-gobject"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"DE"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #"))) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"obj-in-list?"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"obj"
0 0 24 3 2 #")("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 2 #" ("
0 0 14 3 12 #"gobject-name"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 4 #"))) "
0 0 14 3 3 #"lst"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; get-gobject: symbol -> gobject"
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";; Conusmes a symbol and returns the gobject associated with that sy"
 #"mbol."
) 0 0 24 29 1 #"\n"
0 0 17 3 58
#";; No test cases because this relies on a global variable."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"get-gobject"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 8 #"in-core?"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"obj"
0 0 24 3 2 #")("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 2 #" ("
0 0 14 3 12 #"gobject-name"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 4 #"))) "
0 0 14 3 4 #"core"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 5 #"error"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 52
#"\"Cannot retrieve gobject \\\"~a\\\" - does not exist!~n\""
0 0 24 3 2 #" ("
0 0 14 3 14 #"symbol->string"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; stor-obj: gobject -> void"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";; Consumes an gobject and pushes it to core memory, overwriting"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; anything else under the same name already there."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"stor-obj"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 4 #"core"
0 0 24 3 2 #" ("
0 0 14 3 16 #"stor-obj-in-list"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 1 #" "
0 0 14 3 4 #"core"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";; stor-obj-in-list: gobject list[gobject] -> list[gobject]"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";; Consumes an gobject and pushes it to the given list, overwriting"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; anything else under the same name already there."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"stor-obj-in-list"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-gobject"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"O1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 17 3 35 #"; Storing gobjects in an empty list"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-gobject"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"O1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"stor-obj-in-list"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-gobject"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"O2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-gobject"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"O1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0 1 24 65 1 #"\t"
0 0 17 3 45 #"; Storing gobjects in a list with one gobject"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-gobject"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"O1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"make-gobject"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"O2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"stor-obj-in-list"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-gobject"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"O3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-gobject"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"O1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 1 24 65 1 #"\t"
0 0 17 3 46 #"; Storing gobjects in a list with two gobjects"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-gobject"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"O2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-gobject"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"O1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"make-gobject"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"O2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"make-gobject"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"O3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"stor-obj-in-list"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-gobject"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"O1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-gobject"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"O1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #"))) "
0 0 17 3 24 #"; Overwriting an gobject"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-gobject"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"O1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"stor-obj-in-list"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 8 #"in-core?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"gobject-name"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 3 #")) "
0 0 17 3 39 #";; Allows for addition of new variables"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"o"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 4 #"   ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 8 #"symbol=?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"gobject-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"o"
0 0 24 3 3 #") ("
0 0 14 3 12 #"gobject-name"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 5 #"     "
0 0 14 3 3 #"obj"
0 0 24 3 1 #" "
0 0 17 3 50 #"; Replace prior-existing variable under given name"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 5 #"     "
0 0 14 3 1 #"o"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #" "
0 0 14 3 4 #"core"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 4 #"core"
0 0 24 3 1 #")"
0 1 24 65 1 #"\t"
0 0 17 3 63
#";; If the core is empty, make a list out of an incoming gobject"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 4 #"core"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";; del-obj: symbol -> void"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";; Consumes an gobject name (symbol) and deletes it entirely"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; from core memory."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"del-obj"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 4 #"core"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"obj"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 7 #"      ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 2 #" ("
0 0 14 3 12 #"gobject-name"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #" "
0 0 14 3 4 #"core"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #"; ============================="
0 0 24 29 1 #"\n"
0 0 17 3 23 #"; INTERPRETER FUNCTIONS"
0 0 24 29 1 #"\n"
0 0 17 3 23 #"; (for real this time!)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIN_X"
0 0 24 3 1 #" "
0 0 21 3 3 #"800"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIN_Y"
0 0 24 3 1 #" "
0 0 21 3 3 #"600"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"SKIPTIME"
0 0 24 3 1 #" "
0 0 21 3 5 #"0.016"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; big-crunch: list[cmd] -> void"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";; Runs the program contained within a list of commands."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"big-crunch"
0 0 24 3 1 #" "
0 0 14 3 7 #"cmdlist"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"for-each"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cmd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 7 #"      ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 14 3 8 #"exec-cmd"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 14 3 9 #"core-dump"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 14 3 11 #"sleep/yield"
0 0 24 3 1 #" "
0 0 14 3 8 #"SKIPTIME"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 4 #"    "
0 0 14 3 7 #"cmdlist"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; mov-obj: number number symbol -> void"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";; Consumes two numbers and an gobject name, and moves"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";; the gobject to the coordinates given by the number pair."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"move-obj"
0 0 24 3 1 #" "
0 0 14 3 2 #"nx"
0 0 24 3 1 #" "
0 0 14 3 2 #"ny"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 8 #"in-core?"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 8 #"stor-obj"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"make-gobject"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 14 3 4 #"name"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 14 3 14 #"gobject-sprite"
0 0 24 3 2 #" ("
0 0 14 3 11 #"get-gobject"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 14 3 2 #"nx"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 14 3 2 #"ny"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 12 #"gobject-velx"
0 0 24 3 2 #" ("
0 0 14 3 11 #"get-gobject"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 12 #"gobject-vely"
0 0 24 3 2 #" ("
0 0 14 3 11 #"get-gobject"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 5 #"error"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 46 #"\"Cannot move gobject \\\"~a\\\" - does not exist!\""
0 0 24 3 2 #" ("
0 0 14 3 14 #"symbol->string"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; exec-cmd: cmd -> void"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";; Executes a given command. Doesn't accept commands that"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; return booleans."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"exec-cmd"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 7 #"JMPOBJ?"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 2 #" ("
0 0 14 3 8 #"move-obj"
0 0 24 3 2 #" ("
0 0 14 3 9 #"JMPOBJ-nx"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 3 #") ("
0 0 14 3 9 #"JMPOBJ-ny"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 3 #") ("
0 0 14 3 10 #"JMPOBJ-obj"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 2 #"[("
0 0 14 3 11 #"JMPOBJRAND?"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 2 #" ("
0 0 14 3 8 #"move-obj"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIN_X"
0 0 24 3 3 #") ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIN_Y"
0 0 24 3 3 #") ("
0 0 14 3 14 #"JMPOBJRAND-obj"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 2 #"[("
0 0 14 3 8 #"STOPOBJ?"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 2 #" ("
0 0 14 3 8 #"stor-obj"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 4 #"   ("
0 0 14 3 12 #"make-gobject"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"STOPOBJ-obj"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 1 #")"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 17 3 6 #"; Name"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 6 #"     ("
0 0 14 3 14 #"gobject-sprite"
0 0 24 3 2 #" ("
0 0 14 3 11 #"get-gobject"
0 0 24 3 2 #" ("
0 0 14 3 11 #"STOPOBJ-obj"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 3 #")))"
0 1 24 65 1 #"\t"
0 0 17 3 10 #"; Sp(r)ite"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 6 #"     ("
0 0 14 3 12 #"gobject-posx"
0 0 24 3 2 #" ("
0 0 14 3 11 #"get-gobject"
0 0 24 3 2 #" ("
0 0 14 3 11 #"STOPOBJ-obj"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 3 #")))"
0 1 24 65 1 #"\t"
0 0 17 3 6 #"; Posx"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 6 #"     ("
0 0 14 3 12 #"gobject-posy"
0 0 24 3 2 #" ("
0 0 14 3 11 #"get-gobject"
0 0 24 3 2 #" ("
0 0 14 3 11 #"STOPOBJ-obj"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 3 #")))"
0 1 24 65 1 #"\t"
0 0 17 3 6 #"; Posy"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 5 #"     "
0 0 21 3 1 #"0"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 17 3 6 #"; Velx"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 5 #"     "
0 0 21 3 1 #"0"
0 0 24 3 3 #"))]"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 17 3 6 #"; Vely"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 2 #"[("
0 0 14 3 7 #"ADDOBJ?"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 2 #" ("
0 0 14 3 8 #"stor-obj"
0 0 24 3 2 #" ("
0 0 14 3 10 #"ADDOBJ-obj"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 2 #"[("
0 0 14 3 7 #"UDTOBJ?"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 1 #")"
0 1 24 65 1 #"\t"
0 0 17 3 43 #"; maybe split this off into an exec-UDTOBJ?"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 2 #" ("
0 0 14 3 8 #"move-obj"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 6 #"     ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 8 #"       ("
0 0 14 3 12 #"gobject-posx"
0 0 24 3 2 #" ("
0 0 14 3 11 #"get-gobject"
0 0 24 3 2 #" ("
0 0 14 3 10 #"UDTOBJ-obj"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 3 #")))"
0 1 24 65 1 #"\t"
0 0 17 3 13 #"; Update posx"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 8 #"       ("
0 0 14 3 12 #"gobject-velx"
0 0 24 3 2 #" ("
0 0 14 3 11 #"get-gobject"
0 0 24 3 2 #" ("
0 0 14 3 10 #"UDTOBJ-obj"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 6 #"     ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 8 #"       ("
0 0 14 3 12 #"gobject-posy"
0 0 24 3 2 #" ("
0 0 14 3 11 #"get-gobject"
0 0 24 3 2 #" ("
0 0 14 3 10 #"UDTOBJ-obj"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 3 #")))"
0 1 24 65 1 #"\t"
0 0 17 3 13 #"; Update posy"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 8 #"       ("
0 0 14 3 12 #"gobject-vely"
0 0 24 3 2 #" ("
0 0 14 3 11 #"get-gobject"
0 0 24 3 2 #" ("
0 0 14 3 10 #"UDTOBJ-obj"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"UDTOBJ-obj"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 2 #"[("
0 0 14 3 7 #"DELOBJ?"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 2 #" ("
0 0 14 3 7 #"del-obj"
0 0 24 3 2 #" ("
0 0 14 3 10 #"DELOBJ-obj"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 2 #"[("
0 0 14 3 6 #"WHILE?"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 2 #" ("
0 0 14 3 10 #"exec-while"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 2 #"[("
0 0 14 3 7 #"IFCOND?"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 12 #"eval-condcmd"
0 0 24 3 2 #" ("
0 0 14 3 10 #"IFCOND-cnd"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"big-crunch"
0 0 24 3 2 #" ("
0 0 14 3 12 #"IFCOND-ctrue"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"big-crunch"
0 0 24 3 2 #" ("
0 0 14 3 13 #"IFCOND-cfalse"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 17 #"\"invalid command\""
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; eval-condcmd: cmd -> boolean"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";; Consumes a conditional command (COLLIDE?, EDGECOLLIDE?, NOTCOND)"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";; and returns the evaluation of that command in boolean form."
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";; Note: EDGECOLLIDE defines its edges as 10px inside the actual win"
 #"dow border."
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"eval-condcmd"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 8 #"NOTCOND?"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 12 #"eval-condcmd"
0 0 24 3 2 #" ("
0 0 14 3 11 #"NOTCOND-cnd"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 5 #")))] "
0 0 17 3 90
(
 #"; This used to read \"(eval-condcmd cmd)\", resulting in an infinite"
 #"ly expanding stack. FUN!"
) 0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 2 #"[("
0 0 14 3 13 #"EDGECOLLIDE??"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 4 #"   ("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #" ("
0 0 14 3 12 #"gobject-posx"
0 0 24 3 2 #" ("
0 0 14 3 11 #"get-gobject"
0 0 24 3 2 #" ("
0 0 14 3 16 #"EDGECOLLIDE?-obj"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 4 #"   ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIN_X"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #") ("
0 0 14 3 12 #"gobject-posx"
0 0 24 3 2 #" ("
0 0 14 3 11 #"get-gobject"
0 0 24 3 2 #" ("
0 0 14 3 16 #"EDGECOLLIDE?-obj"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 4 #"   ("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #" ("
0 0 14 3 12 #"gobject-posy"
0 0 24 3 2 #" ("
0 0 14 3 11 #"get-gobject"
0 0 24 3 2 #" ("
0 0 14 3 16 #"EDGECOLLIDE?-obj"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 4 #"   ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIN_Y"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #") ("
0 0 14 3 12 #"gobject-posy"
0 0 24 3 2 #" ("
0 0 14 3 11 #"get-gobject"
0 0 24 3 2 #" ("
0 0 14 3 16 #"EDGECOLLIDE?-obj"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 6 #")))))]"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 2 #"[("
0 0 14 3 9 #"COLLIDE??"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 2 #" ("
0 0 14 3 8 #"overlap?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"COLLIDE?-obj1"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 3 #") ("
0 0 14 3 13 #"COLLIDE?-obj2"
0 0 24 3 1 #" "
0 0 14 3 3 #"cmd"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; overlap?: gobject gobject -> boolean"
0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";; Consumes an two gobjects and returns true if their graphics overl"
 #"ap."
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"overlap?"
0 0 24 3 1 #" "
0 0 14 3 4 #"obj1"
0 0 24 3 1 #" "
0 0 14 3 4 #"obj2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"circ-to-rect"
0 0 24 3 1 #" "
0 0 14 3 4 #"circ"
0 0 24 3 1 #")"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 17 3 67
#"; Cheat at circle collision detection. Circles have corners, right?"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 4 #"   ("
0 0 14 3 12 #"make-gobject"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 6 #"     ("
0 0 14 3 12 #"gobject-name"
0 0 24 3 1 #" "
0 0 14 3 4 #"circ"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 6 #"     ("
0 0 14 3 12 #"make-GENRECT"
0 0 24 3 2 #" ("
0 0 14 3 13 #"GENCIRCLE-rad"
0 0 24 3 2 #" ("
0 0 14 3 14 #"gobject-sprite"
0 0 24 3 1 #" "
0 0 14 3 4 #"circ"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 8 #"        "
0 1 24 65 1 #"\t"
0 0 24 3 4 #"   ("
0 0 14 3 13 #"GENCIRCLE-rad"
0 0 24 3 2 #" ("
0 0 14 3 14 #"gobject-sprite"
0 0 24 3 1 #" "
0 0 14 3 4 #"circ"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 4 #"   ("
0 0 14 3 15 #"GENCIRCLE-color"
0 0 24 3 2 #" ("
0 0 14 3 14 #"gobject-sprite"
0 0 24 3 1 #" "
0 0 14 3 4 #"circ"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 6 #"     ("
0 0 14 3 12 #"gobject-posx"
0 0 24 3 1 #" "
0 0 14 3 4 #"circ"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 6 #"     ("
0 0 14 3 12 #"gobject-posy"
0 0 24 3 1 #" "
0 0 14 3 4 #"circ"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 5 #"     "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"intersect-rect"
0 0 24 3 1 #" "
0 0 14 3 4 #"obj1"
0 0 24 3 1 #" "
0 0 14 3 4 #"obj2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"nand"
0 1 24 65 1 #"\t"
0 0 17 3 56 #"; Return true if none of the failure conditions are true"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 7 #"      ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 12 #"gobject-posx"
0 0 24 3 1 #" "
0 0 14 3 4 #"obj1"
0 0 24 3 1 #")"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 17 3 32 #"; obj2 1 is to the right of obj2"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 10 #"         ("
0 0 14 3 9 #"GENRECT-w"
0 0 24 3 2 #" ("
0 0 14 3 14 #"gobject-sprite"
0 0 24 3 1 #" "
0 0 14 3 4 #"obj2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 12 #"gobject-posx"
0 0 24 3 1 #" "
0 0 14 3 4 #"obj2"
0 0 24 3 1 #")"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 17 3 32 #"; obj2 1 is to the right of obj1"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 10 #"         ("
0 0 14 3 9 #"GENRECT-w"
0 0 24 3 2 #" ("
0 0 14 3 14 #"gobject-sprite"
0 0 24 3 1 #" "
0 0 14 3 4 #"obj1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 12 #"gobject-posy"
0 0 24 3 1 #" "
0 0 14 3 4 #"obj1"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 0 4 3 10 #"         ("
0 0 4 3 9 #"GENRECT-h"
0 0 4 3 2 #" ("
0 0 4 3 14 #"gobject-sprite"
0 0 4 3 1 #" "
0 0 4 3 4 #"obj2"
0 0 4 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 1 4 65 1 #"\t"
0 0 4 3 7 #"      ("
0 0 4 3 1 #">"
0 0 4 3 2 #" ("
0 0 4 3 12 #"gobject-posy"
0 0 4 3 1 #" "
0 0 4 3 4 #"obj2"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 0 4 3 10 #"         ("
0 0 4 3 9 #"GENRECT-h"
0 0 4 3 2 #" ("
0 0 4 3 14 #"gobject-sprite"
0 0 4 3 1 #" "
0 0 4 3 4 #"obj1"
0 0 4 3 6 #")))))]"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"    ("
0 0 4 3 14 #"intersect-rect"
0 0 4 3 2 #" ("
0 0 4 3 2 #"if"
0 0 4 3 2 #" ("
0 0 4 3 10 #"GENCIRCLE?"
0 0 4 3 1 #" "
0 0 4 3 4 #"obj1"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 0 4 3 7 #"      ("
0 0 4 3 12 #"circ-to-rect"
0 0 4 3 1 #" "
0 0 4 3 4 #"obj1"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 0 4 3 6 #"      "
0 0 4 3 4 #"obj1"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 0 4 3 5 #"    ("
0 0 4 3 2 #"if"
0 0 4 3 2 #" ("
0 0 4 3 10 #"GENCIRCLE?"
0 0 4 3 1 #" "
0 0 4 3 4 #"obj2"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 0 4 3 7 #"      ("
0 0 4 3 12 #"circ-to-rect"
0 0 4 3 1 #" "
0 0 4 3 4 #"obj2"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 0 4 3 6 #"      "
0 0 4 3 4 #"obj2"
0 0 4 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 28 #";; exec-while: WHILE -> void"
0 0 4 29 1 #"\n"
0 0 4 3 41 #";; Executes a WHILE command, recursively."
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 10 #"exec-while"
0 0 4 3 1 #" "
0 0 4 3 3 #"cmd"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 2 #"if"
0 0 4 3 2 #" ("
0 0 4 3 12 #"eval-condcmd"
0 0 4 3 2 #" ("
0 0 4 3 9 #"WHILE-cnd"
0 0 4 3 1 #" "
0 0 4 3 3 #"cmd"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"    ("
0 0 4 3 5 #"begin"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"      ("
0 0 4 3 10 #"big-crunch"
0 0 4 3 2 #" ("
0 0 4 3 10 #"WHILE-cmds"
0 0 4 3 1 #" "
0 0 4 3 3 #"cmd"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"      ("
0 0 4 3 10 #"exec-while"
0 0 4 3 1 #" "
0 0 4 3 3 #"cmd"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"    ("
0 0 4 3 4 #"void"
0 0 4 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 26 #";; core-dump: void -> void"
0 0 4 29 1 #"\n"
0 0 4 3 72
(
 #";; Takes the core and dumps it. Just kidding, this displays all gobj"
 #"ects"
) 0 0 4 29 1 #"\n"
0 0 4 3 45 #";; in the core and writes them to the screen."
0 0 4 29 1 #"\n"
0 0 4 3 70
(
 #";; Yes, all the \"core\" terminology from earlier was a buildup to t"
 #"his."
) 0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 9 #"core-dump"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"  ("
0 0 4 3 5 #"local"
0 0 4 3 3 #" [("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 13 #"sprite-to-img"
0 0 4 3 1 #" "
0 0 4 3 3 #"spr"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 0 4 3 5 #"    ("
0 0 4 3 4 #"cond"
0 0 4 3 3 #" [("
0 0 4 3 8 #"GENRECT?"
0 0 4 3 1 #" "
0 0 4 3 3 #"spr"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 0 4 3 4 #"   ("
0 0 4 3 9 #"rectangle"
0 0 4 3 2 #" ("
0 0 4 3 9 #"GENRECT-w"
0 0 4 3 1 #" "
0 0 4 3 3 #"spr"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 0 4 3 7 #"      ("
0 0 4 3 9 #"GENRECT-h"
0 0 4 3 1 #" "
0 0 4 3 3 #"spr"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 0 4 3 6 #"      "
0 0 4 3 7 #"\"solid\""
0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 0 4 3 7 #"      ("
0 0 4 3 13 #"GENRECT-color"
0 0 4 3 1 #" "
0 0 4 3 3 #"spr"
0 0 4 3 3 #"))]"
0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 0 4 3 4 #"  [("
0 0 4 3 10 #"GENCIRCLE?"
0 0 4 3 1 #" "
0 0 4 3 3 #"spr"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 0 4 3 4 #"   ("
0 0 4 3 6 #"circle"
0 0 4 3 2 #" ("
0 0 4 3 13 #"GENCIRCLE-rad"
0 0 4 3 1 #" "
0 0 4 3 3 #"spr"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 0 4 3 3 #"   "
0 0 4 3 7 #"\"solid\""
0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 0 4 3 4 #"   ("
0 0 4 3 15 #"GENCIRCLE-color"
0 0 4 3 1 #" "
0 0 4 3 3 #"spr"
0 0 4 3 5 #"))]))"
0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 0 4 3 3 #"  ("
0 0 4 3 6 #"define"
0 0 4 3 2 #" ("
0 0 4 3 14 #"render-objlist"
0 0 4 3 1 #" "
0 0 4 3 3 #"lst"
0 0 4 3 2 #") "
0 0 4 3 19 #";; Returns a scene."
0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 0 4 3 5 #"    ("
0 0 4 3 4 #"cond"
0 0 4 3 3 #" [("
0 0 4 3 5 #"cons?"
0 0 4 3 1 #" "
0 0 4 3 3 #"lst"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 0 4 3 4 #"   ("
0 0 4 3 11 #"place-image"
0 0 4 3 2 #" ("
0 0 4 3 13 #"sprite-to-img"
0 0 4 3 2 #" ("
0 0 4 3 14 #"gobject-sprite"
0 0 4 3 2 #" ("
0 0 4 3 5 #"first"
0 0 4 3 1 #" "
0 0 4 3 3 #"lst"
0 0 4 3 3 #")))"
0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 0 4 3 1 #"("
0 0 4 3 12 #"gobject-posx"
0 0 4 3 2 #" ("
0 0 4 3 5 #"first"
0 0 4 3 1 #" "
0 0 4 3 3 #"lst"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 0 4 3 1 #"("
0 0 4 3 12 #"gobject-posy"
0 0 4 3 2 #" ("
0 0 4 3 5 #"first"
0 0 4 3 1 #" "
0 0 4 3 3 #"lst"
0 0 4 3 2 #"))"
0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 0 4 3 1 #"("
0 0 4 3 14 #"render-objlist"
0 0 4 3 2 #" ("
0 0 4 3 4 #"rest"
0 0 4 3 1 #" "
0 0 4 3 3 #"lst"
0 0 4 3 4 #")))]"
0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 0 4 3 3 #"  ["
0 0 4 3 4 #"else"
0 0 4 3 2 #" ("
0 0 4 3 11 #"empty-scene"
0 0 4 3 1 #" "
0 0 4 3 5 #"WIN_X"
0 0 4 3 1 #" "
0 0 4 3 5 #"WIN_Y"
0 0 4 3 5 #")]))]"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"      ("
0 0 4 3 12 #"update-frame"
0 0 4 3 2 #" ("
0 0 4 3 14 #"render-objlist"
0 0 4 3 1 #" "
0 0 4 3 4 #"core"
0 0 4 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 1 #"("
0 0 4 3 4 #"test"
0 0 4 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 28 #";(create-canvas WIN_X WIN_Y)"
0 0 4 29 1 #"\n"
0 0 4 3 26 #";(big-crunch anim-sample1)"
0 0 4 29 1 #"\n"
0           0
